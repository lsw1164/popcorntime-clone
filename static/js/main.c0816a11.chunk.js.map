{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailTab.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Helmet","role","aria-label","SPAN","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","this","setState","data","results","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","TabContainer","ul","Tab","li","current","Content","VideoContainer","VideoItem","iframe","h2","ProductionContainer","ProductionCompany","bgImg","ProductionCountries","SeasonContainer","Season","DetailTab","result","videos","production_companies","production_countries","seasons","useState","useTab","tab","setTab","onClick","Array","isArray","video","name","src","company","logo_path","country","season","Backdrop","bgImage","Cover","Data","h3","ItemContainer","Item","IMDB","Divider","Overview","p","DetailPresenter","backdrop_path","runtime","episode_run_time","genres","genre","index","href","imdb_id","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","Number","isNaN","Header","header","List","SLink","Link","withRouter","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0816a11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <Helmet>\n      <title>Loading | popcorn time</title>\n    </Helmet>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst SPAN = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <SPAN color={color}>{text}</SPAN>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐\n          </span>\n          {` ${rating}/10`}\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>Movies | popcorn time</title>\n      </Helmet>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying.map((movie) => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {upcoming && upcoming.length > 0 && (\n        <Section title=\"Upcoming Movies\">\n          {upcoming.map((movie) => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Movies\">\n          {popular.map((movie) => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"a4a714d580e5bb9966728ad443bcb645\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      this.setState({ loading: true });\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      this.setState({ nowPlaying, popular, upcoming });\n    } catch {\n      this.setState({ error: \"Can't find movie infomation.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>TV Shows | popcorn time</title>\n      </Helmet>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated Shows\">\n          {topRated.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Shows\">\n          {popular.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today\">\n          {airingToday.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>\n  );\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport api, { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({ error: \"Can't find TV information.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        <Helmet>\n          <title>Search | popcorn time</title>\n        </Helmet>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message color=\"#e74c3c\" text={error} />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message color=\"#95a5a6\" text={\"Nothing found\"} />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      this.setState({ loading: true });\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\n\nconst VIDEO = \"video\";\nconst PRODUCTION = \"production\";\nconst SEASON = \"season\";\nconst YOUTUBE_BASE = \"https://www.youtube.com/embed\";\n\nconst Container = styled.div`\n  font-size: 15px;\n  font-weight: 600;\n  margin-top: 50px;\n  height: 470px;\n  width: 100%;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.7);\n`;\n\nconst TabContainer = styled.ul`\n  height: 70px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Tab = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 30px;\n  width: 70px;\n  opacity: ${(props) => (props.current ? 1 : 0.5)};\n  &:hover {\n    opacity: 1;\n  }\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst Content = styled.div`\n  height: 400px;\n`;\n\nconst VideoContainer = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst VideoItem = styled.iframe`\n  padding: 20px;\n  width: 400px;\n  height: 300px;\n`;\n\nconst Title = styled.h2`\n  font-size: 30px;\n  margin: 20px;\n`;\n\nconst ProductionContainer = styled.div`\n  display: flex;\n  overflow: auto;\n`;\n\nconst ProductionCompany = styled.div`\n  background-image: url(${(props) => props.bgImg});\n  background-position: center center;\n  background-color: rgba(200, 200, 200, 0.5);\n  border: 10px solid rgba(200, 200, 200, 0.7);\n  border-radius: 5px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 300px;\n  height: 150px;\n  padding: 10px;\n  margin: 10px;\n`;\n\nconst ProductionCountries = styled.div`\n  margin: 10px;\n`;\n\nconst SeasonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Season = styled.div`\n  background-image: url(${(props) => props.bgImg});\n  background-size: contain;\n  background-position: center center;\n  border-radius: 5px;\n  background-repeat: no-repeat;\n  width: 200px;\n  height: 300px;\n  margin: 20px;\n  text-shadow: -1px 0 white, 0 1px white, 1px 0 white, 0 -1px white;\n  font-size: 20px;\n  font-weight: 900;\n  font-family: sans;\n  color: black;\n`;\n\nconst useTab = () => {\n  const [tab, setTab] = useState(\"video\");\n  return [tab, setTab];\n};\n\nfunction DetailTab({\n  result: { videos, production_companies, production_countries, seasons },\n}) {\n  const [tab, setTab] = useTab();\n  return (\n    <Container>\n      <TabContainer>\n        {videos && (\n          <Tab current={tab === VIDEO} onClick={() => setTab(VIDEO)}>\n            Video\n          </Tab>\n        )}\n        {(production_companies || production_countries) && (\n          <Tab current={tab === PRODUCTION} onClick={() => setTab(PRODUCTION)}>\n            Production\n          </Tab>\n        )}\n        {seasons && (\n          <Tab current={tab === SEASON} onClick={() => setTab(SEASON)}>\n            Season\n          </Tab>\n        )}\n      </TabContainer>\n      <Content>\n        {tab === VIDEO && Array.isArray(videos.results) && (\n          <VideoContainer>\n            {videos.results.map((video) => (\n              <VideoItem\n                key={video.key}\n                title={video.name}\n                src={`${YOUTUBE_BASE}/${video.key}`}\n              ></VideoItem>\n            ))}\n          </VideoContainer>\n        )}\n        {tab === PRODUCTION && Array.isArray(production_companies) && (\n          <>\n            <Title>Companies</Title>\n            <ProductionContainer>\n              {production_companies.map((company) => (\n                <ProductionCompany\n                  key={company.id}\n                  bgImg={\n                    company.logo_path\n                      ? `https://image.tmdb.org/t/p/w200/${company.logo_path}`\n                      : require(\"../../assets/noPosterSmall.png\")\n                  }\n                >\n                  {company.name}\n                </ProductionCompany>\n              ))}\n            </ProductionContainer>\n          </>\n        )}\n        {tab === PRODUCTION && Array.isArray(production_countries) && (\n          <>\n            <Title>Countries</Title>\n            <ProductionContainer>\n              {production_countries.map((country) => (\n                <ProductionCountries key={country.name}>\n                  {country.name}\n                </ProductionCountries>\n              ))}\n            </ProductionContainer>\n          </>\n        )}\n        {tab === SEASON && Array.isArray(seasons) && (\n          <>\n            <Title>Seasons</Title>\n            <SeasonContainer>\n              {seasons.map((season) => (\n                <div>\n                  <Season\n                    key={season.id}\n                    bgImg={\n                      season.poster_path\n                        ? `https://image.tmdb.org/t/p/w200/${season.poster_path}`\n                        : require(\"../../assets/noPosterSmall.png\")\n                    }\n                  >\n                    {season.name}\n                  </Season>\n                </div>\n              ))}\n            </SeasonContainer>\n          </>\n        )}\n      </Content>\n    </Container>\n  );\n}\n\nexport default DetailTab;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport DetailTab from \"./DetailTab\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst IMDB = styled.a`\n  background-color: #f5c518;\n  font-family: Verdana, Arial, sans-serif;\n  font-weight: 600;\n  color: black;\n  padding: 5px;\n  border-radius: 5px;\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    result && (\n      <Container>\n        <Helmet>\n          <title>\n            {`${\n              result.original_title\n                ? result.original_title\n                : result.original_name\n            } | popcorn time`}\n          </title>\n        </Helmet>\n        <Backdrop\n          bgImage={\n            result.backdrop_path\n              ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Content>\n          <Cover\n            bgImage={\n              result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require(\"../../assets/noPosterSmall.png\")\n            }\n          />\n          <Data>\n            <Title>\n              {result.original_title\n                ? result.original_title\n                : result.original_name}\n            </Title>\n            <ItemContainer>\n              <Item>\n                {result.release_date\n                  ? result.release_date.substring(0, 4)\n                  : result.first_air_date.substring(0, 4)}\n              </Item>\n              <Divider>·</Divider>\n              <Item>\n                {`${\n                  result.runtime ? result.runtime : result.episode_run_time[0]\n                } min`}\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                {result.genres &&\n                  result.genres.map((genre, index) =>\n                    index === result.genres.length - 1\n                      ? genre.name\n                      : `${genre.name} / `\n                  )}\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                <IMDB\n                  href={`https://www.imdb.com/title/${result.imdb_id}`}\n                  target=\"_blank\"\n                >\n                  IMDb\n                </IMDB>\n              </Item>\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n            <DetailTab result={result} />\n          </Data>\n        </Content>\n      </Container>\n    )\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: false,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const parsedId = Number(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    const { isMovie } = this.state;\n    let result = null;\n    try {\n      this.setState({ loading: true });\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    {console.log(pathname)}\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Home</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/detail\"}>\n        <SLink to=\"/detail\">Detail</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"Components/Header\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset}\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body {\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nconst App = () => (\n  <>\n    <Router />\n    <GlobalStyles />\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}